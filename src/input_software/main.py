import sys
import webbrowser
import serial
import serial.tools.list_ports
import socket

# ----------------------------------------------------------------------------------------------------------------------

# Form implementation generated from reading ui file 'main.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import threading

from PyQt5.QtCore import QIODevice
from PyQt5.QtSerialPort import QSerialPort

class SerialThread(QtCore.QThread):
    ser = None

    def __init__(self, ser, parent):
        super().__init__()
        self.socket = socket.socket()
        self.socket.connect((parent.plainTextEdit.toPlainText(), 9780))
        self.serial = QSerialPort()
        self.serial.readyRead.connect(self.receive)
        self.serial.setPortName(ser)
        self.serial.setBaudRate(115200)
        self.serial.open(QIODevice.ReadWrite)

    def receive(self):
        while self.serial.canReadLine():
            text = self.serial.readLine()
            if text:
                print(text)
            self.socket.send(text)

    def stop(self):
        self.serial.close()
        self.socket.close()



class Ui_MainWindow(object):
    def __init__(self):
        self.thr = None
        self.connected = False

    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(357, 179)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(10, 10, 331, 20))
        font = QtGui.QFont()
        font.setBold(False)
        font.setItalic(False)
        font.setUnderline(False)
        font.setWeight(50)
        font.setStrikeOut(False)
        font.setKerning(True)
        self.label.setFont(font)
        self.label.setAlignment(QtCore.Qt.AlignCenter)
        self.label.setObjectName("label")
        self.selectPortBox = QtWidgets.QComboBox(self.centralwidget)
        self.selectPortBox.setGeometry(QtCore.QRect(10, 30, 331, 22))
        self.selectPortBox.setObjectName("selectPortBox")
        self.connectButton = QtWidgets.QPushButton(self.centralwidget)
        self.connectButton.setGeometry(QtCore.QRect(10, 100, 331, 24))
        self.connectButton.setObjectName("connectButton")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(10, 50, 331, 20))
        font = QtGui.QFont()
        font.setBold(False)
        font.setItalic(False)
        font.setUnderline(False)
        font.setWeight(50)
        font.setStrikeOut(False)
        font.setKerning(True)
        self.label_2.setFont(font)
        self.label_2.setAlignment(QtCore.Qt.AlignCenter)
        self.label_2.setObjectName("label_2")
        self.plainTextEdit = QtWidgets.QPlainTextEdit(self.centralwidget)
        self.plainTextEdit.setGeometry(QtCore.QRect(10, 70, 331, 21))
        self.plainTextEdit.setObjectName("plainTextEdit")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 357, 21))
        self.menubar.setObjectName("menubar")
        self.menu = QtWidgets.QMenu(self.menubar)
        self.menu.setObjectName("menu")
        self.menu_2 = QtWidgets.QMenu(self.menubar)
        self.menu_2.setObjectName("menu_2")
        self.menu_3 = QtWidgets.QMenu(self.menubar)
        self.menu_3.setObjectName("menu_3")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setStatusTip("")
        self.statusbar.setWhatsThis("")
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.action = QtWidgets.QAction(MainWindow)
        self.action.setObjectName("action")
        self.action_2 = QtWidgets.QAction(MainWindow)
        self.action_2.setObjectName("action_2")
        self.action_TrumpetHoler_Driver = QtWidgets.QAction(MainWindow)
        self.action_TrumpetHoler_Driver.setObjectName("action_TrumpetHoler_Driver")
        self.action_COM = QtWidgets.QAction(MainWindow)
        self.action_COM.setObjectName("action_COM")
        self.action_3 = QtWidgets.QAction(MainWindow)
        self.action_3.setObjectName("action_3")
        self.menu.addAction(self.action_COM)
        self.menu_2.addAction(self.action_TrumpetHoler_Driver)
        self.menu_3.addAction(self.action_3)
        self.menubar.addAction(self.menu.menuAction())
        self.menubar.addAction(self.menu_2.menuAction())
        self.menubar.addAction(self.menu_3.menuAction())

        self.action_3.triggered.connect(self.open_author)
        self.action_COM.triggered.connect(self.update_com_ports)
        self.action_TrumpetHoler_Driver.triggered.connect(self.exit)

        self.connectButton.clicked.connect(self.connectButton_handler)

        self.retranslateUi(MainWindow)
        self.update_com_ports()
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "TrumpetHoler Input Device Driver"))
        self.label.setText(_translate("MainWindow", "Выберите COM Port"))
        self.connectButton.setText(_translate("MainWindow", "Подключится"))
        self.label_2.setText(_translate("MainWindow", "Введите IP робота"))
        self.plainTextEdit.setPlainText(_translate("MainWindow", "192.168.145.2"))
        self.menu.setTitle(_translate("MainWindow", "Устройство"))
        self.menu_2.setTitle(_translate("MainWindow", "Окно"))
        self.menu_3.setTitle(_translate("MainWindow", "Помощь"))
        self.action.setText(_translate("MainWindow", "Подключится"))
        self.action_2.setText(_translate("MainWindow", "Отключится"))
        self.action_TrumpetHoler_Driver.setText(_translate("MainWindow", "Закрыть TrumpetHoler Driver"))
        self.action_COM.setText(_translate("MainWindow", "Обновить список COM портов"))
        self.action_3.setText(_translate("MainWindow", "Автор"))

    def open_author(self):
        self.statusbar.showMessage("Страница автора открывается")
        webbrowser.open_new_tab("https://vk.com/enderofficialml")
        self.statusbar.showMessage("Страница автора открыта")

    def connectButton_handler(self):
        if not self.connected:
            self.statusbar.showMessage("Идёт подключение к COM порту")
            try:
                self.statusbar.showMessage("Подключение успешно")
                self.thr = SerialThread(self.selectPortBox.currentText(), self)
                self.thr.start()
                self.connected = True
                self.selectPortBox.setEnabled(False)
                self.plainTextEdit.setEnabled(False)
                self.connectButton.setText("Отключится")
            except Exception:
                import traceback
                print(traceback.print_exc())
                self.statusbar.showMessage("Произошла ошибка")
        else:
            self.statusbar.showMessage("Идёт отключение")
            self.connected = False
            self.selectPortBox.setEnabled(True)
            self.plainTextEdit.setEnabled(True)
            self.thr.stop()
            self.connectButton.setText("Подключится")

    def update_com_ports(self):
        self.statusbar.showMessage("Идёт обновление COM портов")
        self.selectPortBox.clear()
        self.selectPortBox.addItems([port.device for port in serial.tools.list_ports.comports()])
        self.statusbar.showMessage("Обновление COM портов прошло успешно")

    def exit(self):
        self.statusbar.showMessage("Выход")
        sys.exit(0)

# ----------------------------------------------------------------------------------------------------------------------

if __name__ == "__main__":
    app = QtWidgets.QApplication(sys.argv)
    ex = Ui_MainWindow()
    w = QtWidgets.QMainWindow()
    ex.setupUi(w)
    w.show()
    sys.exit(app.exec_())